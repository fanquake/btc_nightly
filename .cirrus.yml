container:
  cpu: 2
  memory: 8G
  greedy: true
timeout_in: 120m
env:
  TEST_RUNNER_PORT_MIN: "14000"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache
  DEBIAN_FRONTEND: "noninteractive"
  CTEST_OUTPUT_ON_FAILURE: "ON"
task:
  name: "FreeBSD [system libs]"
  freebsd_instance:
    image_family: freebsd-14-2  # https://cirrus-ci.org/guide/FreeBSD/
    cpu: 2
    memory: 8G
  env:
    MAKEJOBS: "-j4"
    CCACHE_MAXSIZE: "200M"
    CCACHE_COMPRESS: 1
    CCACHE_DIR: "/tmp/ccache_dir"
  ccache_cache:
    folder: "/tmp/ccache_dir"
  install_script:
    - pkg install -y e2fsprogs m4 autoconf automake libtool pkgconf cmake boost-libs git gmake libevent python3 ccache sqlite3 capnproto databases/py-sqlite3 libzmq4 net/py-pyzmq
    - git clone https://github.com/stewartsmith/libeatmydata.git
    - cd libeatmydata
    - autoreconf -i
    - ./configure
    - sed -i -e 's/O_DSYNC/O_SYNC/g' $(git grep -l O_DSYNC)
    - make
    - make install  # eatmydata
  upstream_clone_script:
    - git clone https://github.com/bitcoin/bitcoin --depth=1 ./bitcoin-core
    - cd bitcoin-core
  configure_script:
    - cd bitcoin-core
    - cmake -B ./bld -DWITH_ZMQ=ON -DBUILD_BENCH=ON -DBUILD_FUZZ_BINARY=ON -DWERROR=ON -DWITH_CCACHE=ON
  make_script:
    - cd bitcoin-core
    - cmake --build ./bld $MAKEJOBS
  check_script:
    - cd bitcoin-core
    - ctest --test-dir ./bld ${MAKEJOBS}
  functional_test_script:
    - cd bitcoin-core
    - eatmydata ./bld/test/functional/test_runner.py $MAKEJOBS --ci --extended --combinedlogslen=19999000 --quiet --failfast --timeout-factor=20
task:
  container:
    image: ubuntu:devel
    cpu: 4
    memory: 16G
    greedy: true
  env:
    MAKEJOBS: "-j6"  # Reduce jobs to avoid OOM under gcc
    TEST_RUNNER_PORT_MIN: "14000"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache
    CCACHE_MAXSIZE: "400M"
    CCACHE_DIR: "/tmp/ccache_dir"
  ccache_cache:
    folder: "/tmp/ccache_dir"
  info_script:
    - free -m -h
    - nproc
    - uname --kernel-name --kernel-release
    - lscpu
    - df -h
  install_script:
    - apt update && apt install -y git && apt install -y git ccache build-essential cmake pkg-config python3-zmq libevent-dev libboost-dev qt6-tools-dev qt6-l10n-tools qt6-base-dev systemtap-sdt-dev libqrencode-dev libzmq3-dev libsqlite3-dev libcapnp-dev capnproto ca-certificates
  upstream_clone_script:
    - git clone https://github.com/bitcoin/bitcoin --depth=1 ./bitcoin-core
    - cd bitcoin-core
  matrix:
    - name: "ubuntu:devel [system libs, asan, clang, libc++, no-qt]"
      install_matrix_script:
        - apt install -y libc++abi-dev libc++-dev clang llvm
        - cd bitcoin-core
        - cmake -B ./bld -DBUILD_BENCH=ON -DBUILD_FUZZ_BINARY=ON -DWERROR=ON -DBUILD_GUI=OFF -DWITH_USDT=ON -DWITH_CCACHE=ON -DSANITIZERS=address,integer,undefined -DCMAKE_C_COMPILER="clang" -DCMAKE_CXX_COMPILER="clang++;-stdlib=libc++"
    - name: "ubuntu:devel [system libs, asan, clang]"
      install_matrix_script:
        - apt install -y clang llvm
        - cd bitcoin-core
        - cmake -B ./bld -DBUILD_BENCH=ON -DBUILD_FUZZ_BINARY=ON -DWERROR=ON -DBUILD_GUI=ON -DWITH_USDT=ON -DWITH_CCACHE=ON -DSANITIZERS=address,integer,undefined -DCMAKE_C_COMPILER="clang" -DCMAKE_CXX_COMPILER="clang++"
    - name: "ubuntu:devel [system libs, asan, gcc]"
      install_matrix_script:
        - cd bitcoin-core
        - echo 'nonnull-attribute:streams.h'   >> test/sanitizer_suppressions/ubsan  # runtime error: null pointer passed as argument 1, which is declared to never be null, fwrite
        - echo 'nonnull-attribute:streams.cpp' >> test/sanitizer_suppressions/ubsan  # runtime error: null pointer passed as argument 1, which is declared to never be null, fwrite
        - cmake -B ./bld -DBUILD_BENCH=ON -DBUILD_FUZZ_BINARY=ON -DWERROR=OFF -DBUILD_GUI=ON -DWITH_USDT=ON -DWITH_CCACHE=ON -DSANITIZERS=address,undefined -DAPPEND_CXXFLAGS="-Wno-error=maybe-uninitialized"
    - name: "ubuntu:devel [system libs, tsan, clang, libc++, no-qt]"
      install_matrix_script:
        - apt install -y libc++abi-dev libc++-dev clang llvm
        - cd bitcoin-core
        - cmake -B ./bld -DBUILD_BENCH=ON -DBUILD_FUZZ_BINARY=ON -DWERROR=ON -DBUILD_GUI=OFF -DWITH_USDT=ON -DWITH_CCACHE=ON -DSANITIZERS=thread -DCMAKE_C_COMPILER="clang" -DCMAKE_CXX_COMPILER="clang++;-stdlib=libc++"
    - name: "ubuntu:devel [system libs, tsan, clang]"
      install_matrix_script:
        - apt install -y clang llvm
        - cd bitcoin-core
        - cmake -B ./bld -DBUILD_BENCH=ON -DBUILD_FUZZ_BINARY=ON -DWERROR=ON -DBUILD_GUI=ON -DWITH_USDT=ON -DWITH_CCACHE=ON -DSANITIZERS=thread -DCMAKE_C_COMPILER="clang" -DCMAKE_CXX_COMPILER="clang++"
    - name: "ubuntu:devel [system libs, tsan, gcc, libqt suppression]"
      install_matrix_script:
        - cd bitcoin-core
        - echo 'race:libQt6Core' >> test/sanitizer_suppressions/tsan
        - echo 'race:libQt6Test' >> test/sanitizer_suppressions/tsan
        - cmake -B ./bld -DBUILD_BENCH=ON -DBUILD_FUZZ_BINARY=ON -DWERROR=OFF -DBUILD_GUI=ON -DWITH_USDT=ON -DWITH_CCACHE=ON -DSANITIZERS=thread -DAPPEND_CXXFLAGS="-Wno-error=maybe-uninitialized"
  make_script:
    - cd bitcoin-core
    - cmake --build ./bld $MAKEJOBS
  check_script:
    - cd bitcoin-core
    - export ASAN_OPTIONS="alloc_dealloc_mismatch=0"
    - export LSAN_OPTIONS="suppressions=$(pwd)/test/sanitizer_suppressions/lsan"
    - export TSAN_OPTIONS="suppressions=$(pwd)/test/sanitizer_suppressions/tsan:halt_on_error=1"
    - export UBSAN_OPTIONS="suppressions=$(pwd)/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1"
    - ctest --test-dir ./bld ${MAKEJOBS}
    - ./bld/test/functional/test_runner.py $MAKEJOBS --ci --exclude feature_dbcrash --extended --combinedlogslen=199999000 --quiet --failfast --timeout-factor=9
task:
  name: "fuzz, asan, system libs [fedora]"
  container:
    image: fedora:rawhide
    cpu: 4
    memory: 8G
    greedy: true
  env:
    CCACHE_MAXSIZE: "400M"
    CCACHE_DIR: "/tmp/ccache_dir"
    MAKEJOBS: "-j8"
  ccache_cache:
    folder: "/tmp/ccache_dir"
  upstream_clone_script:
    - dnf install git -y
    - git clone https://github.com/bitcoin/bitcoin --depth=1 ./bitcoin-core
    - git clone https://github.com/bitcoin-core/qa-assets --depth=1
  install_pkgs_script:
    - dnf install make cmake libevent-devel boost-devel sqlite-devel capnproto capnproto-devel python3 clang llvm -y
  configure_script:
    - cd bitcoin-core
    - cmake -B ./bld -DWERROR=ON -DWITH_CCACHE=ON -DBUILD_FOR_FUZZING=ON -DSANITIZERS=fuzzer,address,integer,undefined,float-divide-by-zero -DCMAKE_C_COMPILER="clang" -DCMAKE_CXX_COMPILER="clang++"
  make_script:
    - cd bitcoin-core
    - cmake --build ./bld $MAKEJOBS
  fuzz_script:
    - cd bitcoin-core
    - export LSAN_OPTIONS="suppressions=$(pwd)/test/sanitizer_suppressions/lsan"
    - export TSAN_OPTIONS="suppressions=$(pwd)/test/sanitizer_suppressions/tsan:halt_on_error=1"
    - export UBSAN_OPTIONS="suppressions=$(pwd)/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1"
    - ./bld/test/fuzz/test_runner.py $MAKEJOBS -l DEBUG ../qa-assets/fuzz_corpora/
